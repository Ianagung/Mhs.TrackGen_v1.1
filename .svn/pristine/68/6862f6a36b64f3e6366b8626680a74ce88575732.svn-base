/* 
 * Copyright PT Len Industri (Persero) 

 *  
 * TO PT LEN INDUSTRI (PERSERO), AS APPLICABLE, AND SHALL NOT BE USED IN ANY WAY
 * OTHER THAN BEFOREHAND AGREED ON BY PT LEN INDUSTRI (PERSERO), NOR BE REPRODUCED
 * OR DISCLOSED TO THIRD PARTIES WITHOUT PRIOR WRITTEN AUTHORIZATION BY
 * PT LEN INDUSTRI (PERSERO), AS APPLICABLE
 */
package co.id.len.trackgenerator.main;

//import co.id.len.trackgenerator.connection.ConnectionSettings;
import co.id.len.tdl.variable.ModelVariabel;
import jssc.SerialPortList;

/**
 *
 * @author Datalink
 * @author Ian Agung Prakoso
 */
/**
 *
 * This is Settings JFrame form class
 */
public class Settings extends javax.swing.JDialog {

    /**
     * Reference variables
     */
//    private ConnectionSettings connectionSettings;
    private int[] baudrate = {4800, 9600, 19200, 38400, 57600, 115200};
    private boolean receiveDataState;
    private boolean udpTxState;
    private boolean udpRxState;
    private boolean udpTxFeedbackState;
    private boolean udpRxFeedbackState;
    public ModelVariabel modVar;

    /**
     * Creates new form ConnectionSettings
     */
    public Settings() {
        initComponents();

        this.setLocationRelativeTo(this);
        this.setModal(true);
    }

    public Settings(ModelVariabel model) {
        initComponents();

        this.modVar = model;
        this.setLocationRelativeTo(this);
        this.setModal(true);
        this.setParameter();
    }

    /**
     * method to set parameters
     *
     * @param serialSettings
     */
   public void setParameter() {
       //GPS Port Param
       this.gpsPortTextField.setText(modVar.getGpsPort());
       this.gpsBaudTextField.setText(String.valueOf(modVar.getGpsBaud())); 
       //UDP Conn Param
       //To Core From CCD
       this.UdpTxAddress.setText(modVar.getAddressUdpTx());
       this.UdpTxPort.setText(String.valueOf(modVar.getPortUdpTx()));
       this.udpRxAddress.setText("localhost");
       this.udpRxPort.setText(String.valueOf(modVar.getPortUdpRx()));
       //To CCD from Core
       this.udpTxToCcdAddress.setText(modVar.getAddressUdpTxCcd());
       this.udpTxToCcdPort.setText(String.valueOf(modVar.getPortUdpTxCcd()));
       this.udpRxFromCoreAddress.setText("localhost");
       this.udpRxFromCorePort.setText(String.valueOf(modVar.getPortUdpRxCore()));
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        titleLable = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        closeButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        gpsLable = new javax.swing.JLabel();
        gpsPortNameLabel = new javax.swing.JLabel();
        gpsPortNameComboBox = new javax.swing.JComboBox();
        gpsBaudrateLable = new javax.swing.JLabel();
        gpsBaudrateComboBox = new javax.swing.JComboBox();
        btn_con_gps = new javax.swing.JButton();
        gpsBaudTextField = new javax.swing.JTextField();
        gpsPortTextField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        aidTitleLabel = new javax.swing.JLabel();
        aisPortNameLabel = new javax.swing.JLabel();
        aisPortNameComboBox = new javax.swing.JComboBox();
        aisBaudrateLabel = new javax.swing.JLabel();
        aisBaudrateComboBox = new javax.swing.JComboBox();
        AisConnectButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        radarTitleLabel = new javax.swing.JLabel();
        radarPortNameLabel = new javax.swing.JLabel();
        radarPortNameComboBox = new javax.swing.JComboBox();
        radarBaudrateLabel = new javax.swing.JLabel();
        radarBaudrateComboBox = new javax.swing.JComboBox();
        radarConnectButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JSeparator();
        UdpTxAddress = new javax.swing.JTextField();
        UdpTxPort = new javax.swing.JTextField();
        UdpTxSetButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        udpRxAddress = new javax.swing.JTextField();
        udpRxPort = new javax.swing.JTextField();
        udpRxButton = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        udpTxToCcdPort = new javax.swing.JTextField();
        udpTxToCcdAddress = new javax.swing.JTextField();
        udpRxFromCoreAddress = new javax.swing.JTextField();
        udpRxFromCorePort = new javax.swing.JTextField();
        udpTxToCcdButton = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        udpTx1Label = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        udpRx1Label = new javax.swing.JLabel();
        udpTx2Label = new javax.swing.JLabel();
        udpRx2Label = new javax.swing.JLabel();
        udpAddLabel = new javax.swing.JLabel();
        udpPortLabel = new javax.swing.JLabel();
        udpRxFromCoreButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setPreferredSize(new java.awt.Dimension(531, 68));

        titleLable.setFont(new java.awt.Font("AR BONNIE", 0, 36)); // NOI18N
        titleLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        titleLable.setText("Connection Settings");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(titleLable, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(titleLable, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        gpsLable.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        gpsLable.setText("GPS");

        gpsPortNameLabel.setText("Port Name");

        gpsPortNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gpsPortNameComboBox.setEnabled(false);

        gpsBaudrateLable.setText("Baudrate");

        gpsBaudrateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gpsBaudrateComboBox.setEnabled(false);

        btn_con_gps.setText("Connect");
        btn_con_gps.setEnabled(false);
        btn_con_gps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_con_gpsActionPerformed(evt);
            }
        });

        gpsBaudTextField.setText("0");

        gpsPortTextField.setText("Com1");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(gpsLable))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gpsBaudrateLable)
                            .addComponent(gpsPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gpsPortNameLabel)
                            .addComponent(btn_con_gps)
                            .addComponent(gpsBaudrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(gpsBaudTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(gpsPortNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gpsLable, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(gpsPortNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gpsPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gpsPortNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gpsBaudrateLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gpsBaudTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gpsBaudrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_con_gps)
                .addGap(12, 12, 12))
        );

        aidTitleLabel.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        aidTitleLabel.setText("AIS");

        aisPortNameLabel.setText("Port Name");

        aisPortNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        aisPortNameComboBox.setEnabled(false);

        aisBaudrateLabel.setText("Baudrate");

        aisBaudrateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        aisBaudrateComboBox.setEnabled(false);

        AisConnectButton.setText("Connect");
        AisConnectButton.setEnabled(false);
        AisConnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AisConnectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aisPortNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aisBaudrateLabel)
                    .addComponent(aisBaudrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AisConnectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aisPortNameLabel))
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(aidTitleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aidTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(aisPortNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aisPortNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aisBaudrateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aisBaudrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AisConnectButton)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        radarTitleLabel.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        radarTitleLabel.setText("RADAR");

        radarPortNameLabel.setText("Port Name");

        radarPortNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        radarPortNameComboBox.setEnabled(false);

        radarBaudrateLabel.setText("Baudrate");

        radarBaudrateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        radarBaudrateComboBox.setEnabled(false);

        radarConnectButton.setText("Connect");
        radarConnectButton.setEnabled(false);
        radarConnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radarConnectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radarTitleLabel)
                .addGap(39, 39, 39))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radarPortNameLabel)
                    .addComponent(radarBaudrateLabel)
                    .addComponent(radarConnectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radarPortNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radarBaudrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radarTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radarPortNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radarPortNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radarBaudrateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radarBaudrateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radarConnectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Serial Connection", jPanel4);

        UdpTxAddress.setText("127.0.0.1");
        UdpTxAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UdpTxAddressActionPerformed(evt);
            }
        });

        UdpTxPort.setText("1111");

        UdpTxSetButton.setText("Set");
        UdpTxSetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UdpTxSetButtonActionPerformed(evt);
            }
        });

        udpRxAddress.setText("127.0.0.1");
        udpRxAddress.setEnabled(false);

        udpRxPort.setText("1112");

        udpRxButton.setText("Set");
        udpRxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                udpRxButtonActionPerformed(evt);
            }
        });

        udpTxToCcdPort.setText("1113");

        udpTxToCcdAddress.setText("127.0.0.1");
        udpTxToCcdAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                udpTxToCcdAddressActionPerformed(evt);
            }
        });

        udpRxFromCoreAddress.setText("127.0.0.1");
        udpRxFromCoreAddress.setEnabled(false);

        udpRxFromCorePort.setText("1114");

        udpTxToCcdButton.setText("Set");
        udpTxToCcdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                udpTxToCcdButtonActionPerformed(evt);
            }
        });

        udpTx1Label.setText("To Client (To Core)");

        udpRx1Label.setText("As Client (From CCD)");

        udpTx2Label.setText("To Client (To CCD)");

        udpRx2Label.setText("As Client (From Core)");

        udpAddLabel.setText("Address");

        udpPortLabel.setText("Port");

        udpRxFromCoreButton.setText("Set");
        udpRxFromCoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                udpRxFromCoreButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(udpTx2Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(udpTxToCcdAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(udpTxToCcdPort, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(udpTxToCcdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator9)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(udpRx2Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(udpRxFromCoreAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(udpRxFromCorePort, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(udpRxFromCoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(udpTx1Label)
                        .addGap(41, 41, 41)
                        .addComponent(UdpTxAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UdpTxPort, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UdpTxSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(udpRx1Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(udpRxAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(udpRxPort, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(udpRxButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(udpAddLabel)
                .addGap(62, 62, 62)
                .addComponent(udpPortLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(udpAddLabel)
                    .addComponent(udpPortLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UdpTxAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UdpTxSetButton)
                    .addComponent(UdpTxPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udpTx1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(udpRxAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udpRxPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udpRxButton)
                    .addComponent(udpRx1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(udpTxToCcdAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udpTxToCcdPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udpTx2Label)
                    .addComponent(udpTxToCcdButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(udpRxFromCoreAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udpRxFromCorePort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udpRx2Label)
                    .addComponent(udpRxFromCoreButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("UDP Connection", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_con_gpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_con_gpsActionPerformed
//        if ("Connect".equals(btn_con_gps.getText())) {
//            btn_con_gps.setText("Disconnect");
//            connectionSettings.openGPSConnection(
//                    baudrate[gpsBaudrateComboBox.getSelectedIndex()],
//                    gpsPortNameComboBox.getSelectedItem().toString()
//            );
//            gpsBaudrateComboBox.setEnabled(false);
//            gpsPortNameComboBox.setEnabled(false);
//
//        } else {
//            gpsBaudrateComboBox.setEnabled(true);
//            gpsPortNameComboBox.setEnabled(true);
//            connectionSettings.serialGPS.CloseConnection();
//            btn_con_gps.setText("Connect");
//
//        }
    }//GEN-LAST:event_btn_con_gpsActionPerformed

    private void AisConnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AisConnectButtonActionPerformed
//        if ("Connect".equals(AisConnectButton.getText())) {
//            AisConnectButton.setText("Disconnect");
//            connectionSettings.openAISConnection(
//                    baudrate[aisBaudrateComboBox.getSelectedIndex()],
//                    aisPortNameComboBox.getSelectedItem().toString()
//            );
//            aisBaudrateComboBox.setEnabled(false);
//            aisPortNameComboBox.setEnabled(false);
//        } else {
//            aisBaudrateComboBox.setEnabled(true);
//            aisPortNameComboBox.setEnabled(true);
//            connectionSettings.serialAIS.CloseConnection();
//            AisConnectButton.setText("Connect");
//        }
    }//GEN-LAST:event_AisConnectButtonActionPerformed

    private void radarConnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radarConnectButtonActionPerformed

//        if ("Connect".equals(radarConnectButton.getText())) {
//
//            radarConnectButton.setText("Disconnect");
//            connectionSettings.openRADARConnection(
//                    baudrate[radarBaudrateComboBox.getSelectedIndex()],
//                    radarPortNameComboBox.getSelectedItem().toString()
//            );
//
//            radarBaudrateComboBox.setEnabled(false);
//            radarPortNameComboBox.setEnabled(false);
//        } else {
//            radarBaudrateComboBox.setEnabled(true);
//            radarPortNameComboBox.setEnabled(true);
//            connectionSettings.serialRADAR.CloseConnection();
//            radarConnectButton.setText("Connect");
//
//        }
    }//GEN-LAST:event_radarConnectButtonActionPerformed

    private void UdpTxSetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UdpTxSetButtonActionPerformed

        modVar.setPortUdpTx(Integer.parseInt(UdpTxPort.getText()));
        modVar.setAddressUdpTx(UdpTxAddress.getText());
        modVar.setStatUdpTx(true);
        UdpTxSetButton.setEnabled(false);
    }//GEN-LAST:event_UdpTxSetButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        dispose();
    }//GEN-LAST:event_formWindowClosed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//        GUI_addPortList();
    }//GEN-LAST:event_formWindowOpened

    private void udpRxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_udpRxButtonActionPerformed

        modVar.setPortUdpRx(Integer.parseInt(udpRxPort.getText()));
        modVar.setStatUdpRx(true);
        udpRxButton.setEnabled(false);
    }//GEN-LAST:event_udpRxButtonActionPerformed

    private void udpRxFromCoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_udpRxFromCoreButtonActionPerformed
        modVar.setPortUdpRxCore(Integer.parseInt(udpRxFromCorePort.getText()));
        modVar.setStatUdpRxCore(true);
        udpRxFromCoreButton.setEnabled(false);
    }//GEN-LAST:event_udpRxFromCoreButtonActionPerformed

    private void udpTxToCcdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_udpTxToCcdButtonActionPerformed
        modVar.setPortUdpTxCcd(Integer.parseInt(udpTxToCcdPort.getText()));
        modVar.setAddressUdpTxCcd(udpTxToCcdAddress.getText());
        modVar.setStatUdpTxCcd(true);
        udpTxToCcdButton.setEnabled(false);
    }//GEN-LAST:event_udpTxToCcdButtonActionPerformed

    private void UdpTxAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UdpTxAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UdpTxAddressActionPerformed

    private void udpTxToCcdAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_udpTxToCcdAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_udpTxToCcdAddressActionPerformed
    /**
     * Method to add Port list
     */
    private void GUI_addPortList() {
//        gpsPortNameComboBox.removeAllItems();
////        aisPortNameComboBox.removeAllItems();
////        radarPortNameComboBox.removeAllItems();
//        String[] portNames = SerialPortList.getPortNames();
//        for (int i = 0; i < portNames.length; i++) {
//            gpsPortNameComboBox.addItem(portNames[i]);
////            aisPortNameComboBox.addItem(portNames[i]);
////            radarPortNameComboBox.addItem(portNames[i]);
//        }
//
//        gpsBaudrateComboBox.removeAllItems();
////        aisBaudrateComboBox.removeAllItems();
////        radarBaudrateComboBox.removeAllItems();
//
//        for (int i = 0; i < baudrate.length; i++) {
//            gpsBaudrateComboBox.addItem(String.valueOf(baudrate[i]));
////            aisBaudrateComboBox.addItem(String.valueOf(baudrate[i]));
////            radarBaudrateComboBox.addItem(String.valueOf(baudrate[i]));
//        }
//
//        if (connectionSettings.serialAIS.isPortOpen()) {
//            for (int i = 0; i < portNames.length; i++) {
//                if (portNames[i].equalsIgnoreCase(connectionSettings.serialAIS.getPortName())) {
//                    aisPortNameComboBox.setSelectedIndex(i);
//                    aisPortNameComboBox.setEnabled(false);
//                }
//
//            }
//
//            for (int i = 0; i < baudrate.length; i++) {
//                if (baudrate[i] == (connectionSettings.serialAIS.getBaudrate())) {
//                    aisBaudrateComboBox.setSelectedIndex(i);
//                    aisBaudrateComboBox.setEnabled(false);
//                }
//            }
//            AisConnectButton.setText("Disconnect");
//
//        }
//
//        if (connectionSettings.serialGPS.isPortOpen()) {
//            for (int i = 0; i < portNames.length; i++) {
//                if (portNames[i].equalsIgnoreCase(connectionSettings.serialGPS.getPortName())) {
//                    gpsPortNameComboBox.setSelectedIndex(i);
//                    gpsPortNameComboBox.setEnabled(false);
//                }
//
//            }
//
//            for (int i = 0; i < baudrate.length; i++) {
//                if (baudrate[i] == (connectionSettings.serialGPS.getBaudrate())) {
//                    gpsBaudrateComboBox.setSelectedIndex(i);
//                    gpsBaudrateComboBox.setEnabled(false);
//                }
//            }
//            btn_con_gps.setText("Disconnect");
//
//        }
//        if (connectionSettings.serialRADAR.isPortOpen()) {
//            for (int i = 0; i < portNames.length; i++) {
//                if (portNames[i].equalsIgnoreCase(connectionSettings.serialRADAR.getPortName())) {
//                    radarPortNameComboBox.setSelectedIndex(i);
//                    radarPortNameComboBox.setEnabled(false);
//                }
//
//            }
//
//            for (int i = 0; i < baudrate.length; i++) {
//                if (baudrate[i] == (connectionSettings.serialRADAR.getBaudrate())) {
//                    radarBaudrateComboBox.setSelectedIndex(i);
//                    radarBaudrateComboBox.setEnabled(false);
//                }
//            }
//            radarConnectButton.setText("Disconnect");
//
//        }
    }

    /**
     * @return the receiveDataState
     */
    public boolean isReceiveDataState() {
        return receiveDataState;
    }

    /**
     * @param receiveDataState the receiveDataState to set
     */
    public void setReceiveDataState(boolean receiveDataState) {
        this.receiveDataState = receiveDataState;
    }

    /**
     * @return the udpTxState
     */
    public boolean isUdpTxState() {
        return udpTxState;
    }

    /**
     * @param udpTxState the udpTxState to set
     */
    public void setUdpTxState(boolean udpTxState) {
        this.udpTxState = udpTxState;
    }

    /**
     * @return the udpRxState
     */
    public boolean isUdpRxState() {
        return udpRxState;
    }

    /**
     * @param udpRxState the udpRxState to set
     */
    public void setUdpRxState(boolean udpRxState) {
        this.udpRxState = udpRxState;
    }

    /**
     * @return the udpTxFeedbackState
     */
    public boolean isUdpTxFeedbackState() {
        return udpTxFeedbackState;
    }

    /**
     * @param udpTxFeedbackState the udpTxFeedbackState to set
     */
    public void setUdpTxFeedbackState(boolean udpTxFeedbackState) {
        this.udpTxFeedbackState = udpTxFeedbackState;
    }

    /**
     * @return the udpRxFeedbackState
     */
    public boolean isUdpRxFeedbackState() {
        return udpRxFeedbackState;
    }

    /**
     * @param udpRxFeedbackState the udpRxFeedbackState to set
     */
    public void setUdpRxFeedbackState(boolean udpRxFeedbackState) {
        this.udpRxFeedbackState = udpRxFeedbackState;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AisConnectButton;
    private javax.swing.JTextField UdpTxAddress;
    private javax.swing.JTextField UdpTxPort;
    private javax.swing.JButton UdpTxSetButton;
    private javax.swing.JLabel aidTitleLabel;
    private javax.swing.JComboBox aisBaudrateComboBox;
    private javax.swing.JLabel aisBaudrateLabel;
    private javax.swing.JComboBox aisPortNameComboBox;
    private javax.swing.JLabel aisPortNameLabel;
    private javax.swing.JButton btn_con_gps;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField gpsBaudTextField;
    private javax.swing.JComboBox gpsBaudrateComboBox;
    private javax.swing.JLabel gpsBaudrateLable;
    private javax.swing.JLabel gpsLable;
    private javax.swing.JComboBox gpsPortNameComboBox;
    private javax.swing.JLabel gpsPortNameLabel;
    private javax.swing.JTextField gpsPortTextField;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox radarBaudrateComboBox;
    private javax.swing.JLabel radarBaudrateLabel;
    private javax.swing.JButton radarConnectButton;
    private javax.swing.JComboBox radarPortNameComboBox;
    private javax.swing.JLabel radarPortNameLabel;
    private javax.swing.JLabel radarTitleLabel;
    private javax.swing.JLabel titleLable;
    private javax.swing.JLabel udpAddLabel;
    private javax.swing.JLabel udpPortLabel;
    private javax.swing.JLabel udpRx1Label;
    private javax.swing.JLabel udpRx2Label;
    private javax.swing.JTextField udpRxAddress;
    private javax.swing.JButton udpRxButton;
    private javax.swing.JTextField udpRxFromCoreAddress;
    private javax.swing.JButton udpRxFromCoreButton;
    private javax.swing.JTextField udpRxFromCorePort;
    private javax.swing.JTextField udpRxPort;
    private javax.swing.JLabel udpTx1Label;
    private javax.swing.JLabel udpTx2Label;
    private javax.swing.JTextField udpTxToCcdAddress;
    private javax.swing.JButton udpTxToCcdButton;
    private javax.swing.JTextField udpTxToCcdPort;
    // End of variables declaration//GEN-END:variables
}
